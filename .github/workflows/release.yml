name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Update Inno Setup version from tag
        run: |
          $tag = '${{ github.ref_name }}'
          (Get-Content JenkinsAgentSetup.iss) -replace 'AppVersion=.*', "AppVersion=$tag" | Set-Content JenkinsAgentSetup.iss
        shell: pwsh

      - name: Update JenkinsAgent.csproj version from tag
        run: |
          $tag = '${{ github.ref_name }}'
          $version = $tag.TrimStart('v')
          (Get-Content JenkinsAgent.csproj) -replace '<Version>.*</Version>', "<Version>$version</Version>" `
                                               -replace '<AssemblyVersion>.*</AssemblyVersion>', "<AssemblyVersion>$version</AssemblyVersion>" `
                                               -replace '<FileVersion>.*</FileVersion>', "<FileVersion>$version</FileVersion>" | Set-Content JenkinsAgent.csproj
        shell: pwsh

      - name: Commit and push version bump
        run: |
          git config user.name "mustafagenc"
          git config user.email "eposta@mustafagenc.info"
          git add JenkinsAgent.csproj
          git commit -m "ci: bump version to ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin HEAD:${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish Setup (Inno Setup)
        run: |
          iscc JenkinsAgentSetup.iss
        shell: pwsh

      - name: Find setup exe
        id: find_setup
        run: |
          $file = Get-ChildItem -Path Output -Filter *.exe | Select-Object -First 1
          echo "setup_path=$($file.FullName)" >> $env:GITHUB_OUTPUT
        shell: pwsh


      - name: Generate release notes (PowerShell)
        id: release_notes
        run: |
          $tag = "${{ github.ref_name }}"
          pwsh ./scripts/generate_release_notes.ps1 $tag | Out-File -FilePath release-notes.md -Encoding utf8
        shell: pwsh

      - name: Read release notes
        id: read_release_notes
        run: |
          $body = Get-Content release-notes.md -Raw
          echo "release_body<<EOF" >> $env:GITHUB_OUTPUT
          echo "$body" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.read_release_notes.outputs.release_body }}
          files: |
            ${{ steps.find_setup.outputs.setup_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
